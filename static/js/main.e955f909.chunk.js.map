{"version":3,"sources":["Components/Form/Form.module.css","App.module.css","Components/Section/Section.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/ContactsList/ContactList.module.css","Components/ContactItem/ContactItem.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/Section/Section.js","App.js","index.js"],"names":["module","exports","ContactItem","name","number","deleteContact","className","s","item","button","onClick","ContactsList","contacts","list","map","id","Form","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","props","onSubmit","resetForm","this","label","htmlFor","input","type","onChange","placeholder","required","Component","Filter","Section","title","children","section","wrap","App","filter","contactId","prevState","existNameHandler","existName","nameHandler","toLowerCase","find","addContact","data","alert","changeFilter","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","totalContactsCount","length","normalizedContact","filteredContacts","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e955f909.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__JC5Bg\",\"ani9\":\"Form_ani9__35-sS\",\"input\":\"Form_input__2lshj\",\"label\":\"Form_label__1NVPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__21Bsf\",\"wrap\":\"App_wrap__GYBu6\",\"number\":\"App_number__4vBQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3GFEi\",\"title\":\"Section_title__2Fa8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__22Ys3\",\"button\":\"ContactItem_button__9kYmE\",\"ani9\":\"ContactItem_ani9__1ZdCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2_Fg2\",\"input\":\"Filter_input__1FdWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1emnx\"};","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, deleteContact }) => {\n  return (\n    <li className={s.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button className={s.button} onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => deleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const contact = { id: name, name, number };\n    this.props.onSubmit(contact);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={name}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            value={name}\n            name={'name'}\n            onChange={this.handleChange}\n            id={name}\n            placeholder=\"Enter contact name\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={number}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name={'number'}\n            value={number}\n            onChange={this.handleChange}\n            id={number}\n            placeholder=\"Enter contact number\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add the new contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Ð¡ontact search\n    <input\n      className={s.input}\n      type=\"text\"\n      placeholder=\"Search by name\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <div className={s.wrap}>\n        {title && <h2 className={s.title}>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport ContactsList from './Components/ContactsList/ContactsList';\nimport Form from './Components/Form/Form';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport Section from './Components/Section/Section';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  existNameHandler = existName => {\n    const { contacts } = this.state;\n    const nameHandler = existName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === nameHandler);\n  };\n\n  addContact = data => {\n    const { name } = data;\n    this.existNameHandler(name)\n      ? alert(`${name} is already in exist`)\n      : this.setState(({ contacts }) => ({\n          contacts: [data, ...contacts],\n        }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const totalContactsCount = contacts.length;\n    const normalizedContact = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedContact),\n    );\n\n    return (\n      <div className={s.container}>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <div className={s.wrap}>\n            <p className={s.number}>Number of contacts: {totalContactsCount}</p>\n          </div>\n          <ContactsList\n            contacts={filteredContacts}\n            deleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}